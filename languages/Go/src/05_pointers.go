// Указатели в Go не имеют адресной арифметики (не может быть операндом)
// Сборщик мусора не сможет удалить переменную, пока на неё «смотрит» какой-либо указатель
package main

func main() {
	var p1 *int
	println("Nullable", p1)

	// Тип указателя должен соответствовать типу переменной
	var a int = 6
	p := &a // разыменование (dereference)
	println(a, p)

	// Получить указатель на константу нельзя
	// const c = 5
	// p2 := &с

	// Как и разыменовывать nil-указатель
	// println(*p1)

	// Литерал А{} создаёт в памяти переменную типа А
	type A struct {
		IntField int
	}
	pA := &A{
		IntField: 10,
	}
	// Эквивалентная запись
	// pA := new(A)
	println("pA", pA)

	i := 42
	pi := &i
	println(*pi) // читаем значение переменной i через указатель pi
	*pi = 21     // записываем в переменную i значение 21 через указатель pi

	// Неявное разыменование при доступе к полям структуры
	p3 := &A{}
	p3.IntField = 42 // вместо (*p).IntField = 42
}
